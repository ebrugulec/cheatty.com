{
  "slug": "linux-commands-cheat-sheet",
  "title": "Linux Commands Cheat Sheet",
  "description": "List of linux commands",
  "tags": [
    {
      "name": "linux",
      "slug": "linux",
      "count": 1
    },
    {
      "name": "linux command",
      "slug": "linux-command",
      "count": 1
    }
  ],
  "content": "# Linux Commands Cheat Sheet\n\nList of linux commands\n\n## Systems\n\n- [`lsb_release -a`](https://github.com/commercialhaskell/stack/blob/master/doc/install_and_upgrade.md#ubuntu): find out your Ubuntu version\n\n## Terminals\n\n### Install\n\n- `sudo apt install gnome-terminal`\n- `sudo apt remove gnome-terminal`\n\n### Open\n\n- `Ctrl + Alt + T`: open a new terminal window\n- `Ctrl + Shift + T`: open a terminal tab in the current terminal window\n\n### [Close](http://askubuntu.com/a/19399/306000)\n\n- `exit`: close the current terminal tab\n- `Ctrl + Shift + W`: close the current terminal tab\n- `Ctrl + Shift + Q`: close all terminal tabs and thus the current terminal window\n\n### Tab Switch\n\n- `Ctrl + PgUp`: previous tab\n- `Ctrl + PgDn`: next tab\n- `Ctrl + Shift + PgUp`: move forward\n- `Ctrl + Shift + PgDn`: move backward\n\n### Edit\n\n- `Ctrl + Shift + C`: copy\n- `Ctrl + Shift + V`: paste\n\n## File and Directory\n\n### `ls`\n\n#### Options\n\n- `-a`: show all files, including dot files\n- `-l`: long format\n- `-s` = `--summary`: display only a total for each argument\n- `-t` = `--sort=time`\n- `-X` = `--sort=extension`\n- `-S` = `--sort=size`\n- `-r` = `--reverse`\n- `-h` = `--human-readable`: print sizes in human readable format (e.g., 1K 234M 2G).\n\n#### Case Study\n\n- `ls -laSh`\n- [How do I get the size of a directory on the command line?](http://unix.stackexchange.com/q/185764)\n  - `du -sh * (or <file>)`: give the size of all the directories, files etc in current directory in human readable format.\n    - `du`: disk usage; `df`: disk free space\n    - `-s`: summary\n    - `-h`: human-readable\n    - `--max-depth=<NUM>`: for directory and subdirectories\n\n### `cd`\n\n- `cd ../../../`: Go three directories up\n- `cd -`: Go to previous `pwd`\n\n### `ln`\n\n- `ln -sv <target> <link-name>`: create a _symbolic_ link to <target> with the name <link-name>\n- `ln <target> <link-name>`: create a _hard_ link\n- `unlink <link-name>`\n\n#### Case Study\n\n- `ln -sv ~/dotfiles/vim/vimrc ~/.vimrc`\n- `ln -sv ~/.dotfiles/vim/vim/ ~/.vim`\n\n### Create\n\n- `mkdir <dir>`: create empty directory `<dir>`\n- `touch <file>`: create empty file `<file>`\n\n### `chmod`\n\n- `sudo chmod 776 <file>`\n- [`sudo -R chmod 776 <dir>`](http://stackoverflow.com/a/3740159/1833118): chmod recursively\n\n### `chown`\n\n- [`find . -type f -name '*.pdf' | xargs chown someuser:somegroup`](http://superuser.com/a/260939): This starts in current dir '.' to look for files (filetype f) of name pattern `'*.pdf'` then passes to xargs, which constructs a command line to chmod.\n- [chown -R <usr:grp> <dir>](http://superuser.com/q/260925): chown recursively\n\n### Move (Rename) and Copy\n\n- `mv srcDir destDir`: move srcDir to destDir recursively (no `-R`)\n- `cp -R srcDir destDir`: copy srcDir to destDir recursively (`-R`)\n- `cp -R srcDir destDir/`: ???\n- `cp -R srcDir/ destDir/`: ???\n- `cp -R srcDir/ destDir`: ???\n- [Copying multiple specific files from one folder to another](http://askubuntu.com/a/327285/306000)\n\n  - `cp /home/usr/dir/{file1,file2,file3,file4} /home/usr/destination/` _Note:_ no space between files\n  - `cp /home/usr/dir/file{1..4} ./`\n\n- [Remote copy file or directory](http://askubuntu.com/a/446726/306000)\n  - `scp -r /path/to/local/dir user@remotehost:/path/to/remote/dir`\n\n### Remove File/Dir\n\n- [Kinds of `rm`](http://askubuntu.com/a/60433/306000)\n  - `rm -rf /path/to/directory`: remove the folder\n  - `rm -rf /path/to/directory/*`: remove things in the folder (not the folder itself)\n  - `rm -f /path/to/directory/*`: remove files (not folder) in this folder\n\n### [Rsync: a remote and local file synchronization tool](https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps)\n\n- `rsync -avzP -e 'ssh' /path/to/local/dir user@remotehost:/path/to/remote/dir`\n  - `-a`: a combination flag\n  - `-v`: verbose\n  - `-z`: compression\n  - `-P`: show progress\n\n### Read and Write Files and Directories\n\n- `head -n 10 <file>`: Print the first 10 lines of file\n- `tail -n 10 <file>`: Print the last 10 lines of file\n- `tail -f <file>`: Print appended data as the file grows\n- `tail -f -s <N> <file>`: Sleep for N seconds between iterations\n- [`watch \"ls -lrt | tail -10\"`](http://www.jamesseibel.com/blog/how-to-tail-a-directory-in-linux): tail _-f_ a directory\n\n### Tar\n\n- [`tar -xvzf community_images.tar.gz`](http://askubuntu.com/a/25348/306000)\n  - f: this must be the last flag of the command, and the tar file must be immediately after. It tells tar the name and path of the compressed file.\n  - z: tells tar to decompress the archive using gzip\n  - j: use the bzip2 compaction agent.\n  - u: “update” mode. It just updates the contents of a tar file.\n  - x: tar can collect files or extract them. x does the latter.\n  - v: makes tar talk a lot. Verbose output shows you all the files being extracted.\n- [`tar xf community_images.tar.gz`](http://askubuntu.com/a/398336/306000) suffices.\n- [How do I zip up multiple files on command line?](https://askubuntu.com/a/777050/306000)\n\n  - `ls | grep 1-2- | zip -@ 1-2.zip`: zip files beginning with `1-2-`\n  - `ls | grep .jpg | zip -@ images.zip`: zip up jpgs\n\n  At some point tar was upgraded to auto-decompress.\n\n### Printer\n\n- [`:hardcopy`](http://stackoverflow.com/a/1410821/1833118): send this file to printer\n- [`:set printdevice = xxx`](http://stackoverflow.com/a/26287771/1833118): set options for printing\n- [`:hardcopy > output.pdf`](http://stackoverflow.com/a/26287771/1833118): print as pdf\n\n## Windows\n\n- `Win + RightArrow`: move and re-size working window to the _right_ half the screen\n- `Win + LeftArrow`: move and re-size working window to the _left_ half the screen\n\n## System Monitor\n\n- `sudo poweroff`: shutdown\n- `sudo reboot`: reboot\n- [`free -m`](http://askubuntu.com/a/9655/306000): memory usage; also try `watch -n 5 free -m`\n- [`ps aux --sort -rss | head -n 15`](http://unix.stackexchange.com/a/92498): sorting down processes by memory usage\n\n## Processes\n\n- [`jobs` and then `fg <num>`](http://stackoverflow.com/a/14099502/1833118): show a list of background processes and bring some one back to the foreground\n- [`fg`](http://unix.stackexchange.com/a/45029): bring the last process back to foreground\n- [`jobs` and then `kill -19 %job-id`](http://unix.stackexchange.com/a/45029): suspend the process (`Ctrl + Z`)\n\n## [`ps`]()\n\n- `ps aux | grep apt`: search `apt`-related processes\n- [`ps aux | grep KEYWORD | grep -v grep | grep -v KEYWORD | awk '{print $2}'`](http://stackoverflow.com/a/14669525/1833118): extract pid from `ps aux | grep`\n\n## [`kill`]()\n\n- [kill -s 9 `ps aux | grep skype`](http://askubuntu.com/a/396529/306000)\n- `kill -l`: Shows all types of signals that can be sent to the kill command.\n- `kill -s SIGKILL 4500`: Sends a signal to force the process to terminate.\n- `kill -s 9 4557`: kills the process.\n\n## Networking\n\n### Ping\n\n- `ping <ip> >> ping-log 2>&1`: also redirected stat into file.\n- `kill -SIGINT <ping-pid>`: If the program is terminated with a SIGINT, a brief summary is displayed.\n- [`kill -SIGQUIT <ping-pid>`](http://unix.stackexchange.com/a/143853): Shorter current statistics can be obtained without termination of process with signal SIGQUIT.\n- `kill -SIGINT `pgrep ping``: show stat and stop ping\n- `kill -SIGQUIT `pgrep ping``: show stat without stopping ping\n- [`kill $(pidof ping)`](http://unix.stackexchange.com/a/58141): kill all ping processes\n\n### IP\n\n- [`getent hosts <host> | awk 'NR==1 { print $1 }'`](http://unix.stackexchange.com/a/20793): resolve hostname to ip\n\n### Resources\n\n- [cheat-sheets](https://github.com/hengxin/cheat-sheets/)\n\n"
}
